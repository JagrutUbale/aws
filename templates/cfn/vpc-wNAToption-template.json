{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "VPC Architecture template. Creates a VPC in 1-3 availability-zones, 1-6 subnets with optional NAT instances in each AZ.",

  "Parameters" : {

    "aVPCCIDRBlock" : {
        "Type"                          : "String",
        "Default"                       : "10.79.0.0/22",
        "Description"                   : "Enter your VPC IP CIDR block.",
        "AllowedPattern"                : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
        "ConstraintDescription"         : "Please enter a valid IP CIDR range of the form x.x.x.x/x."
    },
    "bPublic1SubnetAZ1" : {
        "Type"                          : "String",
        "Default"                       : "10.79.0.0/26",
        "Description"                   : "Public subnet for availability zone-1.",
        "AllowedPattern"                : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
        "ConstraintDescription"         : "Please enter a valid IP CIDR range of the form x.x.x.x/x."
    },
    "cPublic1SubnetAZ2" : {
        "Type"                          : "String",
        "Default"                       : "10.79.0.64/26",
        "Description"                   : "Public subnet for availability zone-2. (Enter 'na' if deploying into one AZ only.)",
        "AllowedPattern"                : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})|na",
        "ConstraintDescription"         : "Please enter a valid IP CIDR range of the form x.x.x.x/x or 'na'."
    },
    "dPublic1SubnetAZ3" : {
        "Type"                          : "String",
        "Default"                       : "na",
        "Description"                   : "Public subnet for availability zone-3. (Enter 'na' if deploying into one or two AZs only.)",
        "AllowedPattern"                : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})|na",
        "ConstraintDescription"         : "Please enter a valid IP CIDR range of the form x.x.x.x/x or 'na'."
    },
    "ePrivate1SubnetAZ1" : {
        "Type"                          : "String",
        "Default"                       : "10.79.1.0/24",
        "Description"                   : "Private subnet for availability zone-1.",
        "AllowedPattern"                : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})|na",
        "ConstraintDescription"         : "Please enter a valid IP CIDR range of the form x.x.x.x/x or 'na'."
    },
    "fPrivate1SubnetAZ2" : {
        "Type"                          : "String",
        "Default"                       : "10.79.2.0/24",
        "Description"                   : "Private subnet for availability zone-2. (Enter 'na' if deploying into one AZ only.)",
        "AllowedPattern"                : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})|na",
        "ConstraintDescription"         : "Please enter a valid IP CIDR range of the form x.x.x.x/x or 'na'."
    },
    "gPrivate1SubnetAZ3" : {
        "Type"                          : "String",
        "Default"                       : "na",
        "Description"                   : "Private subnet for availability zone-3. (Enter 'na' if deploying into one or two AZs only.)",
        "AllowedPattern"                : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})|na",
        "ConstraintDescription"         : "Please enter a valid IP CIDR range of the form x.x.x.x/x or 'na'."
    },
    "hNATInstanceType" : {
        "Type"                          : "String",
        "Default"                       : "c3.2xlarge",
        "AllowedPattern"                : "c3.large|c3.xlarge|c3.2xlarge|c3.4xlarge|c3.8xlarge|r3.large|r3.xlarge|r3.2xlarge|r3.4xlarge|r3.8xlarge|i2.xlarge|i2.2xlarge|i2.4xlarge|i2.8xlarge|na",
        "Description"                   : "NAT instance size. Note: Choose a c3, r3 or i2 class instance or 'na' for no NAT instances."
    },
    "iUserKeys" : {
        "Type"                          : "String",
        "Default"                       : "pem-key-name",
        "AllowedPattern"                : "[-a-zA-Z0-9]*",
        "Description"                   : "NAT PEM key name. Note: Only needed if a NAT instance type is specified."
    },
    "jOwnerService" : {
        "Type"                          : "String",
        "Default"                       : "eng",
        "Description"                   : "Owner or service name. (For tagging, use lowercase, no spaces, dashes ok.)",
        "AllowedPattern"                : "[-a-z0-9]*",
        "ConstraintDescription"         : "Use lowercase, no spaces, dashes ok."
    },
    "kStackEnv" : {
        "Type"                          : "String",
        "Default"                       : "stage",
        "Description"                   : "Environment name; prod, stage, dev, etc. (For tagging, use lowercase, no spaces, dashes ok.)",
        "AllowedPattern"                : "[-a-z0-9]*",
        "ConstraintDescription"         : "Use lowercase, no spaces, dashes ok."
    }
  },

  "Conditions" : {

    "Private1AZ1" : {
        "Fn::Not" : [ { "Fn::Equals" : [ { "Ref" : "ePrivate1SubnetAZ1" }, "na" ] } ]
    },
    "Private1AZ2" : {
        "Fn::Not" : [ { "Fn::Equals" : [ { "Ref" : "fPrivate1SubnetAZ2" }, "na" ] } ]
    },
    "Private1AZ3" : {
        "Fn::Not" : [ { "Fn::Equals" : [ { "Ref" : "gPrivate1SubnetAZ3" }, "na" ] } ]
    },
    "Public1AZ2" : {
        "Fn::Not" : [ { "Fn::Equals" : [ { "Ref" : "cPublic1SubnetAZ2" }, "na" ] } ]
    },
    "Public1AZ3" : {
        "Fn::Not" : [ { "Fn::Equals" : [ { "Ref" : "dPublic1SubnetAZ3" }, "na" ] } ]
    },
    "NATTrue" : {
        "Fn::Not" : [ { "Fn::Equals" : [ { "Ref" : "hNATInstanceType" }, "na" ] } ]
    },
    "NATFalse" : {
        "Fn::Equals" : [ { "Ref" : "hNATInstanceType" }, "na" ]
    },
    "GatewayAZ1" : {
        "Fn::And" : [ { "Condition" : "Private1AZ1" }, { "Condition" : "NATFalse" }  ]
    },
    "GatewayAZ2" : {
        "Fn::And" : [ { "Condition" : "Private1AZ2" }, { "Condition" : "NATFalse" }  ]
    },
    "GatewayAZ3" : {
        "Fn::And" : [ { "Condition" : "Private1AZ3" }, { "Condition" : "NATFalse" }  ]
    },
    "NATgwAZ1" : {
        "Fn::And" : [ { "Condition" : "Private1AZ1" }, { "Condition" : "NATTrue" } ]
    },
    "NATgwAZ2" : {
        "Fn::And" : [ { "Condition" : "Public1AZ2" }, { "Condition" : "Private1AZ2" }, { "Condition" : "NATTrue" } ]
    },
    "NATgwAZ3" : {
        "Fn::And" : [ { "Condition" : "Public1AZ3" }, { "Condition" : "Private1AZ3" }, { "Condition" : "NATTrue" } ]
    },
    "AnyNATgw" : {
        "Fn::Or" : [ { "Condition" : "NATgwAZ1" }, { "Condition" : "NATgwAZ2" }, { "Condition" : "NATgwAZ3" } ]
    },
    "AnyPrivate1Subnet" : {
        "Fn::Or" : [ { "Condition" : "Private1AZ1" }, { "Condition" : "Private1AZ2" }, { "Condition" : "Private1AZ3" } ]
    }
  },

  "Mappings" : {

    "RegionNATAMI" : {
        "us-east-1"                     : { "HVM" : "ami-4c9e4b24" },
        "eu-west-1"                     : { "HVM" : "ami-3760b040" },
        "ap-northeast-1"                : { "HVM" : "ami-55c29e54" },
        "us-west-1"                     : { "HVM" : "ami-2b2b296e" },
        "us-west-2"                     : { "HVM" : "ami-bb69128b" },
        "ap-southeast-1"                : { "HVM" : "ami-b082dae2" },
        "ap-southeast-2"                : { "HVM" : "ami-996402a3" },
        "sa-east-1"                     : { "HVM" : "ami-b972dba4" },
        "eu-central-1"                  : { "HVM" : "ami-204c7a3d" }
    },
    "RegionMap" : {
        "us-east-1"                     : { "AbbrRegion" : "ue1" },
        "eu-west-1"                     : { "AbbrRegion" : "ew1" },
        "ap-northeast-1"                : { "AbbrRegion" : "an1" },
        "us-west-1"                     : { "AbbrRegion" : "uw1" },
        "us-west-2"                     : { "AbbrRegion" : "uw2" },
        "ap-southeast-1"                : { "AbbrRegion" : "as1" },
        "ap-southeast-2"                : { "AbbrRegion" : "as2" },
        "sa-east-1"                     : { "AbbrRegion" : "se1" },
        "eu-central-1"                  : { "AbbrRegion" : "ec1" }
    }
  },

  "Resources" : {

    "ec2VPC" : {
      "Type" : "AWS::EC2::VPC",
        "Properties" : {
          "CidrBlock"                   : { "Ref" : "aVPCCIDRBlock" },
          "EnableDnsSupport"            : "true",
          "EnableDnsHostnames"          : "true",
          "InstanceTenancy"             : "default",
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "vpc",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },

    "ec2InternetGW" : {
      "Type" : "AWS::EC2::InternetGateway",
        "Properties" : {
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "igw",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },

    "ec2AttachGateway" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
        "Properties" : {
          "VpcId"                       : { "Ref" : "ec2VPC" },
          "InternetGatewayId"           : { "Ref" : "ec2InternetGW" }
      }
    },

    "ec2Public1SubnetAZ1" : {
      "Type" : "AWS::EC2::Subnet",
        "Properties" : {
          "VpcId"                       : { "Ref" : "ec2VPC" },
          "CidrBlock"                   : { "Ref" : "bPublic1SubnetAZ1" },
          "AvailabilityZone" : { 
            "Fn::Select"                : [ "0", { "Fn::GetAZs" : "" } ]
          },
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "public-subnet1",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },
    "ec2Public1SubnetAZ2" : {
      "Type" : "AWS::EC2::Subnet",
      "Condition" : "Public1AZ2",
        "Properties" : {
          "VpcId"                       : { "Ref" : "ec2VPC" },
          "CidrBlock"                   : { "Ref" : "cPublic1SubnetAZ2" },
          "AvailabilityZone" : { 
            "Fn::Select"                : [ "1", { "Fn::GetAZs" : "" } ]
          },
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "public-subnet2",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },
    "ec2Public1SubnetAZ3" : {
      "Type" : "AWS::EC2::Subnet",
      "Condition" : "Public1AZ3",
        "Properties" : {
          "VpcId"                       : { "Ref" : "ec2VPC" },
          "CidrBlock"                   : { "Ref" : "dPublic1SubnetAZ3" },
          "AvailabilityZone" : { 
            "Fn::Select"                : [ "2", { "Fn::GetAZs" : "" } ]
          },
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "public-subnet3",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },

    "ec2Private1SubnetAZ1" : {
      "Type" : "AWS::EC2::Subnet",
      "Condition" : "Private1AZ1",
        "Properties" : {
          "VpcId"                       : { "Ref" : "ec2VPC" },
          "CidrBlock"                   : { "Ref" : "ePrivate1SubnetAZ1" },
          "AvailabilityZone" : { 
            "Fn::Select"                : [ "0", { "Fn::GetAZs" : "" } ]
          },
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "private-subnet1",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },
    "ec2Private1SubnetAZ2" : {
      "Type" : "AWS::EC2::Subnet",
      "Condition" : "Private1AZ2",
        "Properties" : {
          "VpcId"                       : { "Ref" : "ec2VPC" },
          "CidrBlock"                   : { "Ref" : "fPrivate1SubnetAZ2" },
          "AvailabilityZone" : { 
            "Fn::Select"                : [ "1", { "Fn::GetAZs" : "" } ]
          },
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "private-subnet2",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },
    "ec2Private1SubnetAZ3" : {
      "Type" : "AWS::EC2::Subnet",
      "Condition" : "Private1AZ3",
        "Properties" : {
          "VpcId"                       : { "Ref" : "ec2VPC" },
          "CidrBlock"                   : { "Ref" : "gPrivate1SubnetAZ3" },
          "AvailabilityZone" : { 
            "Fn::Select"                : [ "2", { "Fn::GetAZs" : "" } ]
          },
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "private-subnet3",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },

    "ec2Public1RouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
        "Properties" : {
          "VpcId"                       : { "Ref" : "ec2VPC" },
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "public-rtb",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },

    "ec2Private1RouteTableAZ1" : {
      "Type" : "AWS::EC2::RouteTable",
      "Condition" : "Private1AZ1",
        "Properties" : {
          "VpcId"                       : { "Ref" : "ec2VPC" },
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "private-rtb1",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },
    "ec2Private1RouteTableAZ2" : {
      "Type" : "AWS::EC2::RouteTable",
      "Condition" : "Private1AZ2",
        "Properties" : {
          "VpcId"                       : { "Ref" : "ec2VPC" },
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "private-rtb2",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },
    "ec2Private1RouteTableAZ3" : {
      "Type" : "AWS::EC2::RouteTable",
      "Condition" : "Private1AZ3",
        "Properties" : {
          "VpcId"                       : { "Ref" : "ec2VPC" },
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "private-rtb3",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },

    "ec2Pub1DefaultRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : [ "ec2Public1RouteTable", "ec2InternetGW" ],
        "Properties" : {
          "RouteTableId"                : { "Ref" : "ec2Public1RouteTable" },
          "DestinationCidrBlock"        : "0.0.0.0/0",
          "GatewayId"                   : { "Ref" : "ec2InternetGW" }
      }
    },

    "ec2Pri1DefaultRouteAZ1" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "GatewayAZ1",
      "DependsOn" : [ "ec2Private1RouteTableAZ1", "ec2InternetGW" ],
        "Properties" : {
          "RouteTableId"                : { "Ref" : "ec2Private1RouteTableAZ1" },
          "DestinationCidrBlock"        : "0.0.0.0/0",
          "GatewayId"                   : { "Ref" : "ec2InternetGW" }
      }
    },
    "ec2Pri1NATRouteAZ1" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "NATgwAZ1",
      "DependsOn" : [ "ec2Private1RouteTableAZ1", "ec2NATInstanceAZ1" ],
        "Properties" : {
          "RouteTableId"                : { "Ref" : "ec2Private1RouteTableAZ1" },
          "DestinationCidrBlock"        : "0.0.0.0/0",
          "InstanceId"                   : { "Ref" : "ec2NATInstanceAZ1" }
      }
    },
    "ec2Pri1DefaultRouteAZ2" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "GatewayAZ2",
      "DependsOn" : [ "ec2Private1RouteTableAZ2", "ec2InternetGW" ],
        "Properties" : {
          "RouteTableId"                : { "Ref" : "ec2Private1RouteTableAZ2" },
          "DestinationCidrBlock"        : "0.0.0.0/0",
          "GatewayId"                   : { "Ref" : "ec2InternetGW" }
      }
    },
    "ec2Pri1NATRouteAZ2" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "NATgwAZ2",
      "DependsOn" : [ "ec2Private1RouteTableAZ2", "ec2NATInstanceAZ2" ],
        "Properties" : {
          "RouteTableId"                : { "Ref" : "ec2Private1RouteTableAZ2" },
          "DestinationCidrBlock"        : "0.0.0.0/0",
          "InstanceId"                   : { "Ref" : "ec2NATInstanceAZ2" }
      }
    },
    "ec2Pri1DefaultRouteAZ3" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "GatewayAZ3",
      "DependsOn" : [ "ec2Private1RouteTableAZ3", "ec2InternetGW" ],
        "Properties" : {
          "RouteTableId"                : { "Ref" : "ec2Private1RouteTableAZ3" },
          "DestinationCidrBlock"        : "0.0.0.0/0",
          "GatewayId"                   : { "Ref" : "ec2InternetGW" }
      }
    },
    "ec2Pri1NATRouteAZ3" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "NATgwAZ3",
      "DependsOn" : [ "ec2Private1RouteTableAZ3", "ec2NATInstanceAZ3" ],
        "Properties" : {
          "RouteTableId"                : { "Ref" : "ec2Private1RouteTableAZ3" },
          "DestinationCidrBlock"        : "0.0.0.0/0",
          "InstanceId"                   : { "Ref" : "ec2NATInstanceAZ3" }
      }
    },

    "ec2Public1SubnetRouteTableAssocAZ1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn" : [ "ec2Public1RouteTable" ],
        "Properties" : {
          "SubnetId"                    : { "Ref" : "ec2Public1SubnetAZ1" },
          "RouteTableId"                : { "Ref" : "ec2Public1RouteTable" }
      }
    },
    "ec2Public1SubnetRouteTableAssocAZ2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Condition" : "Public1AZ2",
      "DependsOn" : [ "ec2Public1RouteTable" ],
        "Properties" : {
          "SubnetId"                    : { "Ref" : "ec2Public1SubnetAZ2" },
          "RouteTableId"                : { "Ref" : "ec2Public1RouteTable" }
      }
    },
    "ec2Public1SubnetRouteTableAssocAZ3" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Condition" : "Public1AZ3",
      "DependsOn" : [ "ec2Public1RouteTable" ],
        "Properties" : {
          "SubnetId"                    : { "Ref" : "ec2Public1SubnetAZ3" },
          "RouteTableId"                : { "Ref" : "ec2Public1RouteTable" }
      }
    },

    "ec2Private1SubnetRouteTableAssocAZ1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Condition" : "Private1AZ1",
      "DependsOn" : [ "ec2Private1RouteTableAZ1" ],
        "Properties" : {
          "SubnetId"                    : { "Ref" : "ec2Private1SubnetAZ1" },
          "RouteTableId"                : { "Ref" : "ec2Private1RouteTableAZ1" }
      }
    },
    "ec2Private1SubnetRouteTableAssocAZ2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Condition" : "Private1AZ2",
      "DependsOn" : [ "ec2Private1RouteTableAZ2" ],
        "Properties" : {
          "SubnetId"                    : { "Ref" : "ec2Private1SubnetAZ2" },
          "RouteTableId"                : { "Ref" : "ec2Private1RouteTableAZ2" }
      }
    },
    "ec2Private1SubnetRouteTableAssocAZ3" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Condition" : "Private1AZ3",
      "DependsOn" : [ "ec2Private1RouteTableAZ3" ],
        "Properties" : {
          "SubnetId"                    : { "Ref" : "ec2Private1SubnetAZ3" },
          "RouteTableId"                : { "Ref" : "ec2Private1RouteTableAZ3" }
      }
    },

    "ec2Public1SubnetNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
        "Properties" : {
          "VpcId"                       : { "Ref" : "ec2VPC" },
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "public-nacl",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },

    "ec2Public1SubnetAclEntryIn100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : [ "ec2Public1SubnetNetworkAcl" ],
        "Properties" : {
          "NetworkAclId"                : { "Ref" : "ec2Public1SubnetNetworkAcl" },
          "RuleNumber"                  : "100",
          "Protocol"                    : "-1",
          "RuleAction"                  : "allow",
          "Egress"                      : "false",
          "CidrBlock"                   : "0.0.0.0/0"
        }
    },

    "ec2Public1SubnetAclEntryOut100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : [ "ec2Public1SubnetNetworkAcl" ],
        "Properties" : {
          "NetworkAclId"                : { "Ref" : "ec2Public1SubnetNetworkAcl" },
          "RuleNumber"                  : "100",
          "Protocol"                    : "-1",
          "RuleAction"                  : "allow",
          "Egress"                      : "true",
          "CidrBlock"                   : "0.0.0.0/0"
        }
    },

    "ec2Public1SubnetNetworkAclAssocAZ1" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn" : [ "ec2Public1SubnetNetworkAcl" ],
        "Properties" : {
          "SubnetId"                    : { "Ref" : "ec2Public1SubnetAZ1" },
          "NetworkAclId"                : { "Ref" : "ec2Public1SubnetNetworkAcl" }
      }
    },
    "ec2Public1SubnetNetworkAclAssocAZ2" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Condition" : "Public1AZ2",
      "DependsOn" : [ "ec2Public1SubnetNetworkAcl" ],
        "Properties" : {
          "SubnetId"                    : { "Ref" : "ec2Public1SubnetAZ2" },
          "NetworkAclId"                : { "Ref" : "ec2Public1SubnetNetworkAcl" }
      }
    },
    "ec2Public1SubnetNetworkAclAssocAZ3" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Condition" : "Public1AZ3",
      "DependsOn" : [ "ec2Public1SubnetNetworkAcl" ],
        "Properties" : {
          "SubnetId"                    : { "Ref" : "ec2Public1SubnetAZ3" },
          "NetworkAclId"                : { "Ref" : "ec2Public1SubnetNetworkAcl" }
      }
    },

    "ec2Private1SubnetNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Condition" : "AnyPrivate1Subnet",
        "Properties" : {
          "VpcId"                       : { "Ref" : "ec2VPC" },
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "private-nacl",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },

    "ec2Private1SubnetAclEntryIn100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Condition" : "AnyPrivate1Subnet",
      "DependsOn" : [ "ec2Private1SubnetNetworkAcl" ],
        "Properties" : {
          "NetworkAclId"                : { "Ref" : "ec2Private1SubnetNetworkAcl" },
          "RuleNumber"                  : "100",
          "Protocol"                    : "-1",
          "RuleAction"                  : "allow",
          "Egress"                      : "false",
          "CidrBlock"                   : { "Ref" : "aVPCCIDRBlock" }
        }
    },
    "ec2Private1SubnetAclEntryIn200" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Condition" : "AnyPrivate1Subnet",
      "DependsOn" : [ "ec2Private1SubnetNetworkAcl" ],
        "Properties" : {
          "NetworkAclId"                : { "Ref" : "ec2Private1SubnetNetworkAcl" },
          "RuleNumber"                  : "200",
          "Protocol"                    : "6",
          "PortRange"                   : { "From" : "1024", "To" : "65535" },
          "RuleAction"                  : "allow",
          "Egress"                      : "false",
          "CidrBlock"                   : "0.0.0.0/0"
        }
    },
    "ec2Private1SubnetAclEntryIn300" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Condition" : "AnyPrivate1Subnet",
      "DependsOn" : [ "ec2Private1SubnetNetworkAcl" ],
        "Properties" : {
          "NetworkAclId"                : { "Ref" : "ec2Private1SubnetNetworkAcl" },
          "RuleNumber"                  : "300",
          "Protocol"                    : "17",
          "PortRange"                   : { "From" : "1024", "To" : "65535" },
          "RuleAction"                  : "allow",
          "Egress"                      : "false",
          "CidrBlock"                   : "0.0.0.0/0"
        }
    },

    "ec2Private1SubnetAclEntryOut100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Condition" : "AnyPrivate1Subnet",
      "DependsOn" : [ "ec2Private1SubnetNetworkAcl" ],
        "Properties" : {
          "NetworkAclId"                : { "Ref" : "ec2Private1SubnetNetworkAcl" },
          "RuleNumber"                  : "100",
          "Protocol"                    : "-1",
          "RuleAction"                  : "allow",
          "Egress"                      : "true",
          "CidrBlock"                   : { "Ref" : "aVPCCIDRBlock" }
        }
    },
    "ec2Private1SubnetAclEntryOut200" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Condition" : "AnyPrivate1Subnet",
      "DependsOn" : [ "ec2Private1SubnetNetworkAcl" ],
        "Properties" : {
          "NetworkAclId"                : { "Ref" : "ec2Private1SubnetNetworkAcl" },
          "RuleNumber"                  : "200",
          "Protocol"                    : "6",
          "PortRange"                   : { "From" : "443", "To" : "443" },
          "RuleAction"                  : "allow",
          "Egress"                      : "true",
          "CidrBlock"                   : "0.0.0.0/0"
        }
    },
    "ec2Private1SubnetAclEntryOut300" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Condition" : "AnyPrivate1Subnet",
      "DependsOn" : [ "ec2Private1SubnetNetworkAcl" ],
        "Properties" : {
          "NetworkAclId"                : { "Ref" : "ec2Private1SubnetNetworkAcl" },
          "RuleNumber"                  : "300",
          "Protocol"                    : "6",
          "PortRange"                   : { "From" : "80", "To" : "80" },
          "RuleAction"                  : "allow",
          "Egress"                      : "true",
          "CidrBlock"                   : "0.0.0.0/0"
        }
    },

    "ec2Private1SubnetNetworkAclAssocAZ1" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Condition" : "Private1AZ1",
      "DependsOn" : [ "ec2Private1SubnetNetworkAcl" ],
        "Properties" : {
          "SubnetId"                    : { "Ref" : "ec2Private1SubnetAZ1" },
          "NetworkAclId"                : { "Ref" : "ec2Private1SubnetNetworkAcl" }
      }
    },
    "ec2Private1SubnetNetworkAclAssocAZ2" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Condition" : "Private1AZ2",
      "DependsOn" : [ "ec2Private1SubnetNetworkAcl" ],
        "Properties" : {
          "SubnetId"                    : { "Ref" : "ec2Private1SubnetAZ2" },
          "NetworkAclId"                : { "Ref" : "ec2Private1SubnetNetworkAcl" }
      }
    },
    "ec2Private1SubnetNetworkAclAssocAZ3" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Condition" : "Private1AZ3",
      "DependsOn" : [ "ec2Private1SubnetNetworkAcl" ],
        "Properties" : {
          "SubnetId"                    : { "Ref" : "ec2Private1SubnetAZ3" },
          "NetworkAclId"                : { "Ref" : "ec2Private1SubnetNetworkAcl" }
      }
    },

    "ec2NATSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Condition" : "AnyNATgw",
        "Properties" : {
          "GroupDescription"		: "Security group for our NAT instances.",
          "VpcId"			: {"Ref" : "ec2VPC"},
        "SecurityGroupIngress"  : [
          {
          "IpProtocol"			: "-1",
          "CidrIp"			: { "Ref" : "aVPCCIDRBlock" }
          }
        ],
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "nat-sg",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },

    "iamNATRole" : {
      "Type" : "AWS::IAM::Role",
      "Condition" : "AnyNATgw",
        "Properties" : {
          "AssumeRolePolicyDocument": {
            "Statement" : [ {
              "Effect"			: "Allow",
              "Principal" : {
                "Service"		: [ "ec2.amazonaws.com" ]
              },
              "Action"			: [ "sts:AssumeRole" ]
            } ]
          },
          "Path"			: "/",
          "Policies" : [ {
            "PolicyName"		: "NATMonitor",
            "PolicyDocument" : {
              "Statement" : [ {
                "Effect" : "Allow",
                "Action" : [
                        "ec2:CreateRoute",
                        "ec2:DescribeInstances",
                        "ec2:ReplaceRoute",
                        "ec2:StartInstances",
                        "ec2:StopInstances"
                ],
                "Resource" : "*"
              } ]
            }
          } ]
        }
    },
    "iamNATMonitorProfile" : {
      "Type": "AWS::IAM::InstanceProfile",
      "Condition" : "AnyNATgw",
      "DependsOn" : [ "iamNATRole" ],
        "Properties" : {
          "Path"			: "/",
          "Roles"			: [ { "Ref": "iamNATRole" } ]
        }
    },

    "ec2IPAddressNAT1" : {
      "Type" : "AWS::EC2::EIP",
      "Condition" : "NATgwAZ1",
      "DependsOn" : [ "ec2NATInstanceAZ1" ],
        "Properties" : {
          "Domain"			: "vpc",
          "InstanceId"			: { "Ref" : "ec2NATInstanceAZ1" }
        }
    },
    "ec2IPAddressNAT2" : {
      "Type" : "AWS::EC2::EIP",
      "Condition" : "NATgwAZ2",
      "DependsOn" : [ "ec2NATInstanceAZ2" ],
        "Properties" : {
          "Domain"			: "vpc",
          "InstanceId"			: { "Ref" : "ec2NATInstanceAZ2" }
        }
    },
    "ec2IPAddressNAT3" : {
      "Type" : "AWS::EC2::EIP",
      "Condition" : "NATgwAZ3",
      "DependsOn" : [ "ec2NATInstanceAZ3" ],
        "Properties" : {
          "Domain"			: "vpc",
          "InstanceId"			: { "Ref" : "ec2NATInstanceAZ3" }
        }
    },

    "ec2NATInstanceAZ1" : {
      "Type" : "AWS::EC2::Instance",
      "Condition" : "NATgwAZ1",
      "DependsOn" : [ "ec2NATSecurityGroup", "iamNATMonitorProfile" ],
        "Properties" : {
          "AvailabilityZone"            : { "Fn::GetAtt" : [ "ec2Public1SubnetAZ1", "AvailabilityZone" ] },
          "ImageId"			: { "Fn::FindInMap" : [ "RegionNATAMI", { "Ref" : "AWS::Region" }, "HVM" ] },
          "InstanceType"		: { "Ref" : "hNATInstanceType" },
          "Monitoring"			: "true",
          "SourceDestCheck"		: "false",
          "DisableApiTermination"	: "true",
          "KeyName"			: { "Ref" : "iUserKeys" },
          "SecurityGroupIds"		: [ { "Ref" : "ec2NATSecurityGroup" } ],
          "SubnetId"			: { "Ref" : "ec2Public1SubnetAZ1" },
          "IamInstanceProfile"		: { "Ref": "iamNATMonitorProfile" },
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "nat-az1",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },
    "ec2NATInstanceAZ2" : {
      "Type" : "AWS::EC2::Instance",
      "Condition" : "NATgwAZ2",
      "DependsOn" : [ "ec2NATSecurityGroup", "iamNATMonitorProfile" ],
        "Properties" : {
          "AvailabilityZone"            : { "Fn::GetAtt" : [ "ec2Public1SubnetAZ2", "AvailabilityZone" ] },
          "ImageId"			: { "Fn::FindInMap" : [ "RegionNATAMI", { "Ref" : "AWS::Region" }, "HVM" ] },
          "InstanceType"		: { "Ref" : "hNATInstanceType" },
          "Monitoring"			: "true",
          "SourceDestCheck"		: "false",
          "DisableApiTermination"	: "true",
          "KeyName"			: { "Ref" : "iUserKeys" },
          "SecurityGroupIds"		: [ { "Ref" : "ec2NATSecurityGroup" } ],
          "SubnetId"			: { "Ref" : "ec2Public1SubnetAZ2" },
          "IamInstanceProfile"		: { "Ref": "iamNATMonitorProfile" },
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "nat-az2",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    },
    "ec2NATInstanceAZ3" : {
      "Type" : "AWS::EC2::Instance",
      "Condition" : "NATgwAZ3",
      "DependsOn" : [ "ec2NATSecurityGroup", "iamNATMonitorProfile" ],
        "Properties" : {
          "AvailabilityZone"            : { "Fn::GetAtt" : [ "ec2Public1SubnetAZ3", "AvailabilityZone" ] },
          "ImageId"			: { "Fn::FindInMap" : [ "RegionNATAMI", { "Ref" : "AWS::Region" }, "HVM" ] },
          "InstanceType"		: { "Ref" : "hNATInstanceType" },
          "Monitoring"			: "true",
          "SourceDestCheck"		: "false",
          "DisableApiTermination"	: "true",
          "KeyName"			: { "Ref" : "iUserKeys" },
          "SecurityGroupIds"		: [ { "Ref" : "ec2NATSecurityGroup" } ],
          "SubnetId"			: { "Ref" : "ec2Public1SubnetAZ3" },
          "IamInstanceProfile"		: { "Ref": "iamNATMonitorProfile" },
        "Tags": [
          {
            "Key"                       : "Name",
            "Value"                     : { "Fn::Join" : [ "-",
                                            [
                                              { "Ref" : "jOwnerService" },
                                              { "Ref" : "kStackEnv" },
                                                "nat-az3",
                                              { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AbbrRegion" ] }
                                            ]
                                          ] }
          }
        ]
      }
    }
  },

  "Outputs" : {

    "VPCId" : {
      "Description"                     : "VPC Id",
      "Value"                           : { "Ref" : "ec2VPC" }
    },
    "NatIPAZ1" : {
    "Condition" : "NATgwAZ1",
      "Description"                     : "NAT-AZ1 Public IP",
      "Value"                           : { "Fn::Join" : [ " ",
                                            [
                                              { "Ref" : "ec2NATInstanceAZ1" }, "is",
                                              { "Fn::GetAtt" : [ "ec2NATInstanceAZ1", "PublicIp" ] }
                                            ]
                                          ] }
    },
    "NatIPAZ2" : {
    "Condition" : "NATgwAZ2",
      "Description"                     : "NAT-AZ2 Public IP",
      "Value"                           : { "Fn::Join" : [ " ",
                                            [
                                              { "Ref" : "ec2NATInstanceAZ2" }, "is",
                                              { "Fn::GetAtt" : [ "ec2NATInstanceAZ2", "PublicIp" ] }
                                            ]
                                          ] }
    },
    "NatIPAZ3" : {
    "Condition" : "NATgwAZ3",
      "Description"                     : "NAT-AZ3 Public IP",
      "Value"                           : { "Fn::Join" : [ " ",
                                            [
                                              { "Ref" : "ec2NATInstanceAZ3" }, "is",
                                              { "Fn::GetAtt" : [ "ec2NATInstanceAZ3", "PublicIp" ] }
                                            ]
                                          ] }
    },
    "Pub1SubnetAZ1" : {
      "Description"                     : "Public Subnet Id for AZ1",
      "Value"                           : { "Fn::Join" : [ " ",
                                            [
                                              { "Ref" : "ec2Public1SubnetAZ1" }, "in",
                                              { "Fn::GetAtt" : [ "ec2Public1SubnetAZ1", "AvailabilityZone" ] }
                                            ]
                                          ] }
    },
    "Pub1SubnetAZ2" : {
    "Condition" : "Public1AZ2",
      "Description"                     : "Public Subnet Id for AZ2",
      "Value"                           : { "Fn::Join" : [ " ",
                                            [
                                              { "Ref" : "ec2Public1SubnetAZ2" }, "in",
                                              { "Fn::GetAtt" : [ "ec2Public1SubnetAZ2", "AvailabilityZone" ] }
                                            ]
                                          ] }
    },
    "Pub1SubnetAZ3" : {
    "Condition" : "Public1AZ3",
      "Description"                     : "Public Subnet Id for AZ3",
      "Value"                           : { "Fn::Join" : [ " ",
                                            [
                                              { "Ref" : "ec2Public1SubnetAZ3" }, "in",
                                              { "Fn::GetAtt" : [ "ec2Public1SubnetAZ3", "AvailabilityZone" ] }
                                            ]
                                          ] }
    },
    "Pri1SubnetAZ1" : {
      "Condition" : "Private1AZ1",
      "Description"                     : "Private Subnet Id for AZ1",
      "Value"                           : { "Fn::Join" : [ " ",
                                            [
                                              { "Ref" : "ec2Private1SubnetAZ1" }, "in",
                                              { "Fn::GetAtt" : [ "ec2Private1SubnetAZ1", "AvailabilityZone" ] }
                                            ]
                                          ] }
    },
    "Pri1SubnetAZ2" : {
    "Condition" : "Private1AZ2",
      "Description"                     : "Private Subnet Id for AZ2",
      "Value"                           : { "Fn::Join" : [ " ",
                                            [
                                              { "Ref" : "ec2Private1SubnetAZ2" }, "in",
                                              { "Fn::GetAtt" : [ "ec2Private1SubnetAZ2", "AvailabilityZone" ] }
                                            ]
                                          ] }
    },
    "Pri1SubnetAZ3" : {
    "Condition" : "Private1AZ3",
      "Description"                     : "Private Subnet Id for AZ3",
      "Value"                           : { "Fn::Join" : [ " ",
                                            [
                                              { "Ref" : "ec2Private1SubnetAZ3" }, "in",
                                              { "Fn::GetAtt" : [ "ec2Private1SubnetAZ3", "AvailabilityZone" ] }
                                            ]
                                          ] }
    }
  }
}
